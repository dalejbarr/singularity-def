#!/bin/bash

NMC=1000
KPARAM=-1
MPARAM=NA
OSMOOTH=FALSE
FITBLOCKED=TRUE
FITLMEM=TRUE
RHO=0
VERS=(0 1 2 3 4 5 6 7 8)
SHUFFUN=shuffle

function usage {
    echo "usage: "
    echo "  $0 -os -nb -nl -r wwww -n xxxx -k yyyy -m zzzz -v v1 v2 v3"
    echo "where:"
    echo "  -os             select 'os_always = TRUE' (force overall smooth)"
    echo "  -nb             skip fitting of blocked version"
    echo "  -nl             skip fitting of linear mixed-effects model"
    echo "  -h              show help screen"
    echo "  -r  wwww        set rho (default 0)"
    echo "  -n  xxxx        number of monte carlo runs (default 1000)"
    echo "  -k  yyyy        k parameter for factor smooths (basis dimensions; default -1)"
    echo "  -m  zzzz        m parameter for factor smooths (penalization; default NA)"
    echo "  -v  v1 v2 v3    version(s) of time-varying scenarios to run (default: 0 to 10)"
    echo "  -rf function    unquoted name of randomization function for within factor (default 'shuffle')"
}

while [ -n "$1" ]
do
    case "$1" in
	-h) usage
	    exit ;;
	-k) KPARAM="$2"
	    shift ;;
	-m) MPARAM="$2"
	    shift ;;
	-n) NMC="$2"
	    shift ;;
	-r) RHO="$2"
	    shift ;;
	-v) VERS=()
	    while [[ $2 =~ ^[0-9]+$ ]]
	    do
		VERS+=($2)
		shift
	    done
	    ;;
	-nb) FITBLOCKED=FALSE
	     ;;
	-nl) FITLMEM=FALSE
	     ;;
	-os) OSMOOTH=TRUE
	     ;;
	-rf) SHUFFUN="$2"
	     shift ;;
	*) usage
	   exit ;;
    esac
    shift
done

if [[ $OSMOOTH == "TRUE" ]]
then
   echo "force overall smooth: selected"
fi
   
echo "running with nruns=$NMC k=$KPARAM m=$MPARAM"
echo "versions: ${VERS[@]}"

array1=(0 .05 .10 .15 .20 .25)
array2=(0 .10 .20 .30 .40 .50)

for ((i=0;i<${#array1[@]};++i)); do
    k=`expr $i + 1`
    # printf "(%s/%s) A = %.2f, B = %.2f, AB = %.2f\n" "$k" "${#array1[@]}" "${array1[i]}" "${array2[i]}" "${array2[i]}"
    for j in "${VERS[@]}"; do
	CMD="suppressMessages(autocorr::mcsim($NMC, A = ${array1[i]}, B = ${array2[i]}, AB = ${array2[i]}, version = $j, os_always = $OSMOOTH, k = $KPARAM, m = $MPARAM, fit_blocked = $FITBLOCKED, fit_lmem = $FITLMEM, bam_args = list(rho = $RHO), rand_fn = \"$SHUFFUN\"))"
	LEN=`expr length "$CMD" - 1`
	SUBSTR=`echo "$CMD" | cut -c 18-$LEN`
	printf "      $SUBSTR\n"
	printf "      Running $NMC simulations of version %d ... " "$j"
	EXECTIME=`(/usr/bin/time -f "%E" Rscript -e "$CMD") 2>&1`
	printf "DONE in $EXECTIME\n"
    done
done

echo "Simulations completed."
